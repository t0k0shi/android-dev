name: Android UI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

# 最小権限
permissions:
  contents: read

# 同じブランチの古い実行を自動キャンセル
concurrency:
  group: android-ui-${{ github.ref }}
  cancel-in-progress: true

jobs:
  ui-test:
    runs-on: [self-hosted, Linux, X64]
    timeout-minutes: 40
    strategy:
      fail-fast: false
      matrix:
        avd: [pixel6api34, pixel6api33]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Ensure Android SDK PATH
        run: |
          echo "$HOME/Android/platform-tools" >> "$GITHUB_PATH"
          echo "$HOME/Android/emulator" >> "$GITHUB_PATH"
          echo "$HOME/Android/cmdline-tools/latest/bin" >> "$GITHUB_PATH"

      - name: Setup Java 17 (Temurin) with Gradle cache
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'
          cache: gradle

      # systemd 常駐エミュが動いていたら止める（ポート衝突回避）
      - name: Ensure systemd emulator is not running (avoid port conflicts)
        run: |
          set -e
          USER_NAME=azureuser
          USER_UID=$(id -u "$USER_NAME")
          export XDG_RUNTIME_DIR="/run/user/${USER_UID}"
          export DBUS_SESSION_BUS_ADDRESS="unix:path=${XDG_RUNTIME_DIR}/bus"
          systemctl --user stop android-emulator.service 2>/dev/null || \
          systemctl --user --machine="${USER_NAME}@.host" stop android-emulator.service 2>/dev/null || true

      # 直起動で AVD を切替（マトリクス対応）
      - name: Start emulator directly (${{ matrix.avd }})
        run: |
          nohup emulator -avd ${{ matrix.avd }} \
            -no-window -no-metrics -noaudio -no-boot-anim \
            -gpu swiftshader_indirect -feature Vulkan=off \
            -accel on -cores 2 -ports 5554,5555 >/tmp/emulator-${{ matrix.avd }}.log 2>&1 &

      - name: Pin device to emulator-5554
        run: echo "ANDROID_SERIAL=emulator-5554" >> "$GITHUB_ENV"

      - name: Wait for boot with heartbeat
        run: bash android-hello/scripts/wait-boot.sh

      - name: Build & Install Debug
        working-directory: demo-app
        run: ./gradlew --no-daemon :app:assembleDebug :app:installDebug

      - name: Android Lint
        working-directory: demo-app
        run: ./gradlew --no-daemon :app:lintDebug

      - name: Upload lint report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: android-lint-report-${{ matrix.avd }}
          path: demo-app/app/build/reports/lint-results-debug.html

      - name: Unit tests (if any)
        working-directory: demo-app
        run: ./gradlew --no-daemon testDebugUnitTest

      - name: Connected UI Tests (retry once + quick logs)
        working-directory: demo-app
        run: |
          set -e
          if ./gradlew --no-daemon :app:connectedDebugAndroidTest; then
            exit 0
          fi
          echo "Retrying once after 20s..."
          sleep 20
          if ./gradlew --no-daemon :app:connectedDebugAndroidTest; then
            exit 0
          fi
          echo "==== Last 200 lines of logcat (error hints) ===="
          adb -s "${ANDROID_SERIAL}" logcat -d | tail -n 200 || true
          exit 1

      - name: Collect artifacts (${{ matrix.avd }})
        if: always()
        run: |
          mkdir -p artifacts/${{ matrix.avd }}
          adb -s emulator-5554 exec-out screencap -p > artifacts/${{ matrix.avd }}/screenshot.png || true
          adb -s emulator-5554 logcat -d > artifacts/${{ matrix.avd }}/logcat.txt || true
          [ -f /tmp/emulator-${{ matrix.avd }}.log ] && cp /tmp/emulator-${{ matrix.avd }}.log artifacts/${{ matrix.avd }}/ci-emulator.log || true
          if [ -d demo-app/app/build/reports/androidTests/connected ]; then
            cp -r demo-app/app/build/reports/androidTests/connected artifacts/${{ matrix.avd }}/test-report || true
          fi
          adb -s emulator-5554 shell dumpsys window windows | grep -E 'mCurrentFocus|mFocusedApp' > artifacts/${{ matrix.avd }}/window-focus.txt || true
          adb -s emulator-5554 shell dumpsys power > artifacts/${{ matrix.avd }}/power.txt || true

      - name: Upload artifacts (${{ matrix.avd }})
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: android-ui-artifacts-${{ matrix.avd }}
          path: artifacts/${{ matrix.avd }}

      - name: Stop emulator (always)
        if: always()
        run: adb -s emulator-5554 emu kill || true
